Adjust	Units/ada-ads.d/input.ads	/^    procedure Adjust(S: in out Stack);$/;"	R	packspec:GenStack
Data	Units/ada-ads.d/input.ads	/^        Data: Data_Ptr;$/;"	c	type:Node	file:
Data_Ptr	Units/ada-ads.d/input.ads	/^    type Data_Ptr is access StackData'Class;$/;"	t	packspec:GenStack	file:
Empty	Units/ada-ads.d/input.ads	/^    function Empty(S: Stack) return Boolean;$/;"	R	packspec:GenStack
Finalize	Units/ada-ads.d/input.ads	/^    procedure Finalize(S: in out Stack);$/;"	R	packspec:GenStack
GenStack	Units/ada-ads.d/input.ads	/^package GenStack is$/;"	P
Initialize	Units/ada-ads.d/input.ads	/^    procedure Initialize(S: in out Stack);$/;"	R	packspec:GenStack
Next	Units/ada-ads.d/input.ads	/^        Next: Node_Ptr;$/;"	c	type:Node	file:
Node	Units/ada-ads.d/input.ads	/^    type Node is record$/;"	t	packspec:GenStack	file:
Node_Ptr	Units/ada-ads.d/input.ads	/^    type Node_Ptr is access Node;$/;"	t	packspec:GenStack	file:
Pop	Units/ada-ads.d/input.ads	/^    procedure Pop(S: in out Stack; D: in out StackData'class);$/;"	R	packspec:GenStack
Push	Units/ada-ads.d/input.ads	/^    procedure Push(S: in out Stack; D: StackData'class);$/;"	R	packspec:GenStack
Stack	Units/ada-ads.d/input.ads	/^    type Stack is new Controlled with private;$/;"	t	packspec:GenStack
Stack	Units/ada-ads.d/input.ads	/^    type Stack is new Controlled with record$/;"	t	packspec:GenStack	file:
StackData	Units/ada-ads.d/input.ads	/^    type StackData is new Controlled with null record;$/;"	t	packspec:GenStack
Top	Units/ada-ads.d/input.ads	/^    procedure Top(S: Stack; Data: in out StackData'class);$/;"	R	packspec:GenStack
