clock	input.vr	/^  input clock          CLOCK;$/;"	s
count	input.vr	/^  input [7:0] count    PSAMPLE #-1 hdl_node "sample_if_verilog.counter";$/;"	s
cout	input.vr	/^  input [7:0] cout     PSAMPLE #-1;$/;"	s
data	input.vr	/^  inout data           PSAMPLE PHOLD NSAMPLE#-1 NHOLD #1;$/;"	s
data_in	input.vr	/^  input data_in        PSAMPLE #-1 hdl_node "sample_if_verilog.data";$/;"	s
ddr_data_in	input.vr	/^  input ddr_data_in    PSAMPLE NSAMPLE;$/;"	s
enable	input.vr	/^  output enable        PHOLD#1;$/;"	s
nenable	input.vr	/^  output  nenable      PHOLD   #1 hdl_node "sample_if_verilog.counter_en";$/;"	s
reset	input.vr	/^  output reset         PHOLD#1;$/;"	s
sample_if	input.vr	/^interface sample_if {$/;"	I
